# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

type Account {
  address: String!
  organisations: [Organisation]
}

type GlobalStats {
  lastBlock: Int
  membershipsCount: Int
  organisationsCount: Int
  participantsCount: Int
}

type Organisation {
  address: String!
  bank: [Token]
  name: String!
  participant(address: String!): Participant
  participants(after: String, first: Int): OrganisationParticipantConnection
  platform: String!
  proposal(index: Int): Proposal
  proposals: [Proposal]
  totalSupply: Token
}

type OrganisationParticipantConnection {
  edges: [ParticipantConnectionEdge]
  pageInfo: PageInfo
  totalCount: Int!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Participant {
  address: String!
  shares: Token
}

type ParticipantConnectionEdge {
  cursor: String
  node: Participant
}

type Proposal {
  createdAt: String
  index: Int!
  payload: JSON
  proposer: String!
  status: ProposalStatus
  votes: [Vote]
}

type Query {
  account(address: String!): Account
  organisation(address: String): Organisation
  stats: GlobalStats
}

type Token {
  amount: String!
  decimals: Int!
  name: String
  symbol: String
  value(symbol: String!): Token
}

type Vote {
  createdAt: String
  decision: Decision
  voter: Participant
}

enum Decision {
  ABSTAIN
  NO
  YES
}

enum ProposalStatus {
  ABORT
  ACTIVE
  PASS
  REJECT
}


scalar JSON
